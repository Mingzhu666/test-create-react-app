{"version":3,"sources":["components/CurrentDate/CurrentDate.jsx","config.js","components/TemperatureRange/TemperatureRange.jsx","components/InsolationDuration/InsolationDuration.jsx","components/TemperatureWithInsolation/TemperatureWithInsolation.jsx","components/WeatherWithDescription/WeatherWithDescription.jsx","components/DailyWeather/DailyWeather.jsx","components/ForecastWeekWeather/ForecastWeekWeather.jsx","components/LocationSearchBar/LocationSearchBar.jsx","components/CurrentLocation/CurrentLocation.jsx","components/LandingPage/LandingPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["CurrentDate","currentDate","timezone","current","Date","toLocaleDateString","className","WEATHER_API_KEY","TemperatureRange","rangeType","temperature","rangeTemperature","toFixed","InsolationDuration","insolationIcon","insolationTime","sunTime","toLocaleTimeString","icon","faSun","faMoon","TemperatureWithInsolation","sunrise","sunset","tempMin","tempMax","WeatherWithDescription","description","alt","src","DailyWeather","day","weatherIcon","lowTemperature","highTemperature","low","high","ForecastWeekWeather","props","forecastData","map","data","index","dt","toDateString","split","weather","temp","min","max","LocationSearchBar","searchField","handleChange","handleSubmit","onSubmit","type","placeholder","value","onChange","CurrentLocation","currentLocation","LandingPage","fetchWeather","location","axios","get","then","response","coord","lat","lon","result","setState","todaysData","daily","isLoading","console","log","state","catch","error","e","event","target","preventDefault","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b0b8ba0.chunk.js","sourcesContent":["import React from 'react';\nimport './CurrentDate.scss';\n\nconst CurrentDate = ({ currentDate, timezone }) => {\n  const current = new Date(currentDate * 1000).toLocaleDateString('en-US', timezone);\n\n  return (\n    <div className=\"search-bar-date\">{current}</div>\n  );\n}\n\nexport default CurrentDate;","export const WEATHER_API_URL = \"https://api.openweathermap.org/data/2.5/\";\nexport const WEATHER_API_KEY = \"112ab103f1c5ad1981c26cdbe12ff49d\";\n\n// dotenv","import React from 'react';\nimport './TemperatureRange.scss';\nimport { faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst TemperatureRange = ({ rangeType, rangeTemperature }) => {\n  const temperature = (rangeTemperature - 273.15).toFixed(1);\n\n  return (\n    <div className=\"temperature-range\">\n      <div className=\"temperature-range__type\">{rangeType}</div>\n      <div className=\"temperature-range__temperature\">{temperature}â„ƒ</div>\n    </div>\n  );\n}\n\nexport default TemperatureRange;\n\n","import React from 'react';\nimport './InsolationDuration.scss'\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst InsolationDuration = ({ insolationIcon, insolationTime, timezone }) => {\n  const sunTime = new Date(insolationTime * 1000).toLocaleTimeString('en-US', timezone);\n\n  return (\n    <div className=\"insolation-duration\">\n      <div className=\"insolation-duration__icon\">\n        {insolationIcon === 'Start' ? <FontAwesomeIcon icon={faSun} /> : <FontAwesomeIcon icon={faMoon} />}\n      </div>\n      <div className=\"insolation-duration__time\">\n        {sunTime}\n      </div>\n    </div>\n  );\n}\n\nexport default InsolationDuration;","import React from 'react';\nimport TemperatureRange from '../TemperatureRange/TemperatureRange';\nimport InsolationDuration from '../InsolationDuration/InsolationDuration';\nimport './TemperatureWithInsolation.scss';\n\nconst TemperatureWithInsolation = ({ sunrise, sunset, tempMin, tempMax, timezone }) => {\n  return (\n    <div className=\"temperature-with-insolation\"> \n      <div className=\"temperature-container\">\n        {<>\n          <TemperatureRange \n            rangeType=\"Low\" \n            rangeTemperature={tempMin} \n          />\n          <TemperatureRange \n            rangeType=\"High\" \n            rangeTemperature={tempMax} \n          />\n        </>}\n      </div>\n\n      <div className=\"insolation-container\">\n        {<>\n          <InsolationDuration\n            className=\"insolation-duration-container__range\"\n            insolationIcon=\"Start\"\n            insolationTime={sunrise}\n            timezone={timezone}\n          />\n          <InsolationDuration\n            className=\"insolation-duration-container__range\"\n            insolationIcon=\"End\"\n            insolationTime={sunset}\n            timezone={timezone}\n          />\n        </>}\n      </div>\n    </div>\n  );\n}\n\nexport default TemperatureWithInsolation;\n","import React from 'react';\nimport './WeatherWithDescription.scss';\n// import { faCloud, faSun } from \"@fortawesome/free-solid-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst WeatherWithDescription = ({ icon, description }) => {\n  return (\n    <div className=\"weather-with-description\">\n      <img alt=\"weatherIcon\" src={ `http://openweathermap.org/img/w/${icon}.png` } />\n      <div className=\"weather-with-description__description\">{description}</div>\n    </div>\n  );\n}\n\nexport default WeatherWithDescription;\n","import React from 'react';\nimport './DailyWeather.scss'\nimport { faCloud } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst DailyWeather = ({ day, weatherIcon, lowTemperature, highTemperature }) => {\n  const low = (lowTemperature - 273.15).toFixed(1);\n  const high = (highTemperature - 273.15).toFixed(1);\n\n  return (\n    <div className=\"daily-temperature\">\n      <div className=\"daily-temperature__day\">\n        {day}\n      </div>\n      <div className=\"daily-temperature__weather-icon\">\n        {/* {weatherIcon === 'Cloud' ? <FontAwesomeIcon icon={faCloud} /> : ''} */}\n        <img alt=\"weatherIcon\" src={ `http://openweathermap.org/img/w/${weatherIcon}.png` } />\n      </div>\n      <div className=\"daily-temperature__range\">\n        <span className=\"daily-temperature__range-low\">{low}â„ƒ</span>\n        <span className=\"daily-temperature__range-high\">{high}â„ƒ</span>\n      </div>\n    </div>\n  );\n}\n\nexport default DailyWeather;","import React from 'react';\nimport DailyWeather from '../DailyWeather';\nimport './ForecastWeekWeather.scss';\n\nconst ForecastWeekWeather = (props) => {\n  return (\n    <div className=\"forecast-week-weather\">\n      {\n        props.forecastData.map((data, index) => \n        (\n          <DailyWeather\n            className=\"forecast-week-weather__daily\"\n            key={index}\n            day={new Date(data.dt*1000).toDateString().split(\" \")[0]}\n            weatherIcon={data.weather[0].icon}\n            lowTemperature={data.temp.min.toFixed(1)}\n            highTemperature={data.temp.max.toFixed(1)}\n          />\n        ))\n      } \n    </div>\n  );\n}\n \nexport default ForecastWeekWeather;","import React from 'react';\nimport './LocationSearchBar.scss';\n\nconst LocationSearchBar = ({ searchField, handleChange, handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type='search' \n        className='search-bar-location'\n        placeholder='Search for a city'\n        value={searchField}\n        onChange={handleChange}\n      />\n    </form>\n  );\n}\n\nexport default LocationSearchBar;","import React from 'react';\nimport './CurrentLocation.scss';\n\nconst CurrentLocation = ({ currentLocation }) => {\n  return (\n    <div className=\"location\">{currentLocation}</div>\n  );\n}\n\nexport default CurrentLocation;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport CurrentDate from '../CurrentDate';\nimport './LandingPage.scss';\nimport { WEATHER_API_KEY } from \"../../config\";\nimport TemperatureWithInsolation from '../TemperatureWithInsolation';\nimport WeatherWithDescription from '../WeatherWithDescription';\nimport ForecastWeekWeather from '../ForecastWeekWeather';\nimport LocationSearchBar from '../LocationSearchBar';\nimport CurrentLocation from '../CurrentLocation';\n\nclass LandingPage extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      searchField: '',\n      location: 'Sydney',\n      isLoading: true,\n      forecastData: null,\n      todaysData: null,\n    };\n\n    // this.handleSearchBarChange = this.handleSearchBarChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchWeather(this.state.location);\n  }\n\n  fetchWeather = (location) => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${WEATHER_API_KEY}`)\n      .then(response => response.data)\n      .then(\n        data => axios\n          .get(\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=hourly&appid=${WEATHER_API_KEY}`\n          )\n          .then(result => this.setState({ forecastData: result.data, todaysData: result.data.daily[0], isLoading: false}, () => console.log(1111, this.state.todaysData.weather[0].icon)))\n          .catch((error) => {\n            console.error('Error:', error);\n          })\n      )\n      .catch(e => console.error(e));\n  }\n\n  handleChange = (event) => {\n    this.setState(() => ({\n      searchField: event.target.value,\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // this.setState({location: this.searchField,})\n    // return this.fetchWeather(this.state.location);\n\n    this.fetchWeather(this.state.searchField);\n    this.setState({\n      location: this.state.searchField,\n    })\n\n    // axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.searchField}&appid=${WEATHER_API_KEY}`)\n    //   .then(response => response.data)\n    //   .then(\n    //     data => axios\n    //       .get(\n    //         `https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=hourly&appid=${WEATHER_API_KEY}`\n    //       )\n    //       .then(result => this.setState({ location: this.state.searchField, forecastData: result.data, todaysData: result.data.daily[0], isLoading: false}, () => console.log(1111, this.state.forecastData)))\n    //       .catch((error) => {\n    //         console.error('Error:', error);\n    //       })\n    //   )\n    //   .catch(e => this.setState({location: e.message}));\n  }\n\n  render() {\n    const { location, searchField, todaysData, forecastData } = this.state;\n\n    return (\n      this.state.isLoading ? (\n        <div>LOADING...</div>\n      ) : (\n        <div className=\"weather-app-container\"> \n          <div className=\"search-bar\">\n            <LocationSearchBar \n              currentLocation={location} \n              searchField={searchField} \n              handleSubmit={this.handleSubmit} \n              handleChange={this.handleChange} \n            />\n            <CurrentLocation currentLocation={location} />\n            <CurrentDate currentDate={todaysData.dt} timezone={forecastData.timezone} />\n          </div>\n          <div className=\"weather-app-container__today\">\n            <WeatherWithDescription icon={todaysData.weather[0].icon} description={todaysData.weather[0].description} />\n            <TemperatureWithInsolation\n              sunrise={todaysData.sunrise}\n              sunset={todaysData.sunset}\n              tempMin={todaysData.temp.min}\n              tempMax={todaysData.temp.max}\n              timezone={forecastData.timezone}\n            />\n          </div>\n          <ForecastWeekWeather forecastData={forecastData.daily} />\n        </div>\n      )\n    )\n  }\n}\n\nexport default LandingPage;","import LandingPage from \"./components/LandingPage/LandingPage\";\n\nfunction App() {\n  return (\n    <>\n      <LandingPage />\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}